{"version":3,"sources":["components/SearchBar.js","components/Crosses/TableTools.js","components/Crosses/CrossesList.js","components/Crosses/TableContainer.js","components/Crosses/InsertCrossModal.js","containers/Crosses.js"],"names":["SearchBar","className","type","autoComplete","name","id","this","props","placeholder","onChange","onKeyUp","value","children","Component","TableTools","onClick","turnPage","disabled","currentPage","updateNumOfItems","CrossesList","itemsPerPage","crosses","slice","map","cross","CROSS_ID","key","COMPETITOR_PART","GENERIC","COMPETITOR","BRAND","direct","comments","TableContainer","length","InsertCrossModal","state","competitors","manufacturers","selectedCompetitor","competitorPart","selectedPrincipal","principalPart","addNewCompetitor","newCompetitor","fetchCompetitors","comps","fetch","then","res","json","setState","competitor_id","body","competitor","toUpperCase","headers","method","JSON","stringify","catch","error","alert","response","console","log","toggleAddCompetitorButton","isAddingNewComp","obj","recordChange","e","target","validateForm","classList","add","remove","insertCross","comp_id","comp_model","brnd_id","brnd_model","success","updateTable","hide","mfgs","brand_id","Modal","dialogClassName","show","onHide","centered","ModalHeader","closeButton","ModalTitle","ModalBody","style","transition","htmlFor","maxWidth","element","competitor_name","float","width","aria-hidden","onBlur","aria-describedby","brand_name","rows","React","Crosses","input","updateInput","loadCrosses","changeNumOfItemsPerPage","parseInt","displayInsertModal","url","document","title","dir","Math","ceil","isLogged","showModal"],"mappings":"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","file":"static/js/3.2cf163ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"../styles/searchbar.css\"\nclass SearchBar extends Component {\n    render() {\n        return (\n            <div className=\"col-md-8 col-10 searchbar\">\n                <input type=\"text\" className=\"form-control\" autoComplete=\"off\" name=\"name\" id={this.props.id}\n                    placeholder={this.props.placeholder} onChange={this.props.onKeyUp} value={this.props.value?this.props.value: \"\"}/>\n                {this.props.children}\n            </div>\n        );\n\n    }\n}\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport \"../../styles/tableTools.css\"\nclass TableTools extends Component {\n    render() {\n        return (\n            <div id=\"tableTools\">\n                <div id=\"pageContainer\">\n                    <div className=\"leftTriangle\" id=\"previousPage\" onClick={()=>{this.props.turnPage(-1)}}></div>\n                    <input type=\"text\" name=\"page\" className=\"form-control disable-selection\" id=\"pageNumber\" disabled value={this.props.currentPage} />\n                    <div className=\"rightTriangle\" id=\"nextPage\" onClick={()=>{this.props.turnPage(1)}}></div>\n                </div>\n\n                <select className=\"form-control\" id=\"itemsPerPage\" onChange={this.props.updateNumOfItems}>\n                    <option>10</option>\n                    <option>25</option>\n                    <option>50</option>\n                </select>\n\n            </div>\n        );\n\n    }\n}\n\nexport default TableTools;","import React, { Component } from 'react';\n\nclass CrossesList extends Component {\n    render() {\n        const { currentPage, itemsPerPage, crosses } = this.props;\n\n        return (\n            <tbody id=\"tableBody\">\n                {\n                    crosses.slice(itemsPerPage * (currentPage - 1), itemsPerPage * (currentPage)).map(cross => {\n                        return (\n                            <tr id={cross.CROSS_ID} key={cross.COMPETITOR_PART+\",\"+cross.GENERIC}>\n                                <td>{cross.COMPETITOR}</td>\n                                <td>{cross.COMPETITOR_PART}</td>\n                                <td>{cross.BRAND}</td>\n                                <td>{cross.GENERIC}</td>\n                                <td>{cross.direct}</td>\n                                <td>{cross.comments}</td>\n                            </tr>\n                        );\n                    })\n            }\n            </tbody>\n        );\n\n    }\n}\n\nexport default CrossesList;","\nimport React, { Component } from 'react';\nimport CrossesList from './CrossesList';\nimport \"../../styles/crosses.css\"\nclass TableContainer extends Component {\n    render() {\n        return (this.props.crosses.length)? (\n            <div id=\"tableContainer\">\n                <table id=\"tableCrosses\">\n                    <thead>\n                        <tr className=\"firstRow\">\n                            <th>Competitor</th>\n                            <th>Part Number</th>\n                            <th>A&R MFG</th>\n                            <th>A&R MPN</th>\n                            <th>Direct</th>\n                            <th>Comments</th>\n                        </tr>\n                    </thead>\n\n\n                    <CrossesList\n                        currentPage={this.props.currentPage}\n                        itemsPerPage={this.props.itemsPerPage}\n                        crosses={this.props.crosses} />\n\n                </table>\n\n            </div>\n        ): <h2 className=\"centered\">No records found...</h2>;\n\n    }\n}\n\nexport default TableContainer;","import React from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\n// import \"../styles/employeeModal.css\"\n\n\nclass InsertCrossModal extends React.Component {\n    state = {\n        competitors: [],\n        manufacturers: [],\n        selectedCompetitor: \"\",\n        competitorPart: \"\",\n        selectedPrincipal: \"\",\n        principalPart: \"\",\n        direct: \"YES\",\n        comments: \"\",\n        addNewCompetitor: false,\n        newCompetitor: \"\"\n    }\n\n    componentDidMount() {\n        let mfgs;\n\n        // https://arizoslocal.herokuapp.com/includes/getPrincipals.php\n        fetch(\"https://arback-node.herokuapp.com/principals\")\n            .then(res => res.json())\n            .then(res => {\n                mfgs = res;\n                this.setState({ manufacturers: mfgs, selectedPrincipal: mfgs[0].brand_id });\n            });\n\n        this.fetchCompetitors();\n\n    }\n\n    fetchCompetitors = () => {\n        let comps;\n\n        // https://arizoslocal.herokuapp.com/includes/getCompetitors.php\n        fetch(\"https://arback-node.herokuapp.com/competitors\")\n            .then(res => res.json())\n            .then(res => {\n                comps = res;\n                this.setState({ competitors: comps, selectedCompetitor: comps[0].competitor_id });\n            });\n    }\n\n    addNewCompetitor = () => {\n        let body = {};\n        body.competitor = this.state.newCompetitor.toUpperCase();\n\n        fetch(\"https://arback-node.herokuapp.com/competitors\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify(body)\n\n        })\n            .then(res => res.json())\n            .catch(error => alert(\"something went wrong. :(\"))\n            .then(response => {\n                console.log(response);\n                this.toggleAddCompetitorButton();\n                this.fetchCompetitors();\n            });\n    }\n\n    \n\n    toggleAddCompetitorButton = () => {\n        const isAddingNewComp = this.state.addNewCompetitor;\n\n        let obj = {};\n        obj.addNewCompetitor = !isAddingNewComp;\n\n        if (isAddingNewComp) obj.newCompetitor = \"\";\n        this.setState(obj);\n    }\n\n    recordChange = (e) => {\n        let obj = {};\n        obj[e.target.id] = e.target.value;\n        this.setState(obj);\n\n        if (e.target.id === \"competitorPart\" || e.target.id === \"principalPart\") {\n            this.validateForm(e);\n        }\n    }\n\n    validateForm = (e) => {\n        if (e.target.value === \"\") {\n            e.target.classList.add(\"redBorder\");\n        } else {\n            e.target.classList.remove(\"redBorder\");\n        }\n    }\n\n    insertCross = (e) => {\n        if (this.state.competitorPart === \"\" || this.state.selectedCompetitor === \"\" || this.state.direct === \"\" ||\n            this.state.selectedPrincipal === \"\" || this.state.principalPart === \"\") {\n            alert(\"Error. Something went Wrong\");\n            return;\n        }\n\n        const { selectedCompetitor, competitorPart, selectedPrincipal, principalPart, direct, comments } = this.state;\n\n        let body = {\n            comp_id: selectedCompetitor,\n            comp_model: competitorPart,\n            brnd_id: selectedPrincipal,\n            brnd_model: principalPart,\n            direct: direct,\n            comments: comments\n        }\n\n        console.log(JSON.stringify(body));\n        // let body = new FormData();\n\n        fetch(\"https://arback-node.herokuapp.com/crosses\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify(body)\n\n        })\n            .then(res => res.json())\n            .catch(error => alert(\"something went wrong. :(\"))\n            .then(response => {\n                if (response.success) {\n                    alert(response.success);\n                    this.props.updateTable();\n                } else if (response.error) {\n                    alert(response.error);\n                }\n\n                this.props.hide();\n            });\n    }\n\n    render() {\n\n        return (\n            <Modal\n                dialogClassName='custom-dialog'\n                show={this.props.show}\n                onHide={this.props.hide}\n                id=\"insertCrossModal\"\n                centered>\n\n                <ModalHeader closeButton>\n                    <ModalTitle>Insert Cross</ModalTitle>\n                </ModalHeader>\n\n                <ModalBody style={{ transition: 'all 0.5s ease-out' }}>\n                    <div className=\"form-group\">\n\n                        <div className='row form-group'>\n\n                            <div className='col-12'>\n                                <label htmlFor=\"compSelect\">Competitor:</label>\n                                <select name=\"competitor\" className=\"custom-select col-10\" style={{ maxWidth: \"88%\" }} id=\"selectedCompetitor\" onChange={this.recordChange}>\n                                    {this.state.competitors.map(\n                                        element => <option key={element.competitor_id} value={element.competitor_id}>{element.competitor_name}</option>\n                                    )}\n                                </select>\n\n                                <button className='form-control' style={{ float: \"right\", width: \"10%\" }} onClick={this.toggleAddCompetitorButton}>\n                                    {this.state.addNewCompetitor ? <i className=\"fa fa-minus red\" aria-hidden=\"true\"></i> : <i className=\"fa fa-plus green\" aria-hidden=\"true\"></i>}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {\n                        this.state.addNewCompetitor ?\n                            (<div className='row form-group'>\n                                <div className='col-12'>\n                                    <input type=\"text\" name=\"compName\" id=\"newCompetitor\" className=\"form-control form-group\"\n                                        onChange={this.recordChange} onBlur={this.validateForm}\n                                        style={{ float: \"left\", width: \"78%\" }}\n                                        placeholder=\"New Competitor's name\" aria-describedby=\"newCompetitor\" />\n\n                                    {this.state.newCompetitor ? (<button className=\"btn btn-success form-group\" id=\"addComp\"\n                                        style={{ width: \"20%\", float: \"right\" }}\n                                        onClick={this.addNewCompetitor}>\n                                        Add\n                                    </button>) :\n                                        (<button className=\"btn btn-success form-group\" disabled\n                                            style={{ width: \"20%\", float: \"right\" }}>\n                                            Add\n                                    </button>)}\n\n                                </div>\n                            </div>) : \"\"\n                    }\n\n                    <div className=\"row form-group\">\n                        <div className=\"col-12\">\n                            <input type=\"text\" name=\"nombreR\" id=\"competitorPart\" className=\"form-control\"\n                                onKeyUp={this.recordChange} onBlur={this.validateForm}\n                                placeholder=\"Competitor's Part Number...\" aria-describedby=\"competitorPartNumber\" />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"compSelect\">A&R Manufacturer:</label>\n                        <select\n                            onChange={this.recordChange}\n                            name=\"principal\" className=\"custom-select\" id=\"selectedPrincipal\">\n                            {this.state.manufacturers.map(\n                                element => <option key={element.brand_id} value={element.brand_id}>{element.brand_name}</option>\n                            )}\n                        </select>\n                    </div>\n\n                    <div className=\"row form-group\">\n                        <div className=\"col-12\">\n                            <input type=\"text\" name=\"nombreR\" id=\"principalPart\" className=\"form-control\"\n                                placeholder=\"AR Manufacturer's Part Number...\" aria-describedby=\"helpId\"\n                                onKeyUp={this.recordChange} onBlur={this.validateForm} />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"directCross\">Direct:</label>\n                        <select name=\"direct\" className=\"custom-select\" onChange={this.recordChange} id=\"direct\">\n                            <option value=\"YES\">Yes</option>\n                            <option value=\"NO\">No</option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"comments\">Comments</label>\n                        <textarea className=\"form-control\" onKeyUp={this.recordChange} id=\"comments\" rows=\"2\"></textarea>\n                    </div>\n\n                    {(this.state.competitorPart !== \"\" && this.state.principalPart !== \"\") ? <button className=\"btn btn-AR col-3\"\n                        id=\"sendReg\" onClick={this.insertCross}>Send</button> : <button disabled className=\"btn btn-AR col-3\"\n                            id=\"sendReg\">Send</button>}\n\n                </ModalBody>\n            </Modal >\n        );\n    }\n\n\n}\n\nexport default InsertCrossModal;","import React, { Component } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport TableTools from '../components/Crosses/TableTools';\nimport TableContainer from '../components/Crosses/TableContainer';\nimport InsertCrossModal from '../components/Crosses/InsertCrossModal'\n\nclass Crosses extends Component {\n    state = {\n        crosses: [],\n        input: \"\",\n        itemsPerPage: 10,\n        currentPage: 1,\n    }\n\n    componentDidMount() {\n        this.loadCrosses();\n        document.title = \"A&R Crosses\"\n    }\n\n    updateInput = (e) => {\n        if (e.key === 'Enter') {\n            this.loadCrosses(e.target);\n            return;\n        }\n        this.setState({ input: e.target.value });\n    }\n\n    changeNumOfItemsPerPage = (e) => {\n        // console.log(e.target.value);\n        this.setState({ itemsPerPage: parseInt(e.target.value), currentPage: 1 })\n    }\n\n    turnPage(dir) {\n        const { currentPage, crosses, itemsPerPage } = this.state;\n\n        if (currentPage + dir > Math.ceil(crosses.length / itemsPerPage)\n            || currentPage + dir < 1) return;\n\n\n        this.setState({ currentPage: currentPage + dir });\n\n    }\n\n    displayInsertModal = () => {\n        alert(\"Modal needs to be shown\");\n    }\n\n    loadCrosses = () => {\n        //https://arizoslocal.herokuapp.com/includes/crosses.php\n        let url = \"https://arback-node.herokuapp.com/crosses\";\n        url += (this.state.input !== \"\") ? \"?input=\" + this.state.input : \"\";\n        fetch(url, {\n            method: 'GET',\n        })\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ crosses: res, input: \"\", currentPage: 1 });\n                // console.log(res);\n            });\n    }\n\n    render() {\n\n        return (\n            <div className=\"crossesComponent\">\n                <InsertCrossModal show={this.props.show} updateTable={this.loadCrosses} hide={this.props.hide} />\n\n                <SearchBar placeholder=\"Search Competitor's Part...\"\n                    id=\"searchCrossInput\"\n                    onKeyUp={this.updateInput}\n                    value={this.state.input}>\n                    <button type=\"button\" className=\"btn\" onClick={this.loadCrosses} id=\"searchButton\">Search</button>\n                    <button type=\"button\" className=\"btn\" onClick={() => { this.setState({ input: \"\" }); this.loadCrosses() }} id=\"fullSearchButton\">Full List</button>\n                </SearchBar>\n\n                <TableTools\n                    updateNumOfItems={this.changeNumOfItemsPerPage}\n                    turnPage={(dir) => { this.turnPage(dir) }}\n                    currentPage={this.state.currentPage} />\n\n                <TableContainer currentPage={this.state.currentPage}\n                    itemsPerPage={this.state.itemsPerPage}\n                    crosses={this.state.crosses} />\n\n                {(this.props.isLogged) ? <button className=\"btn btn-AR\" onClick={this.props.showModal} id=\"insertCrossBtn\">Add Cross</button> : (null)}\n\n            </div>\n\n        );\n\n    }\n}\n\nexport default Crosses;"],"sourceRoot":""}