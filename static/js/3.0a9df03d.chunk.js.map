{"version":3,"sources":["components/SearchBar.js","components/Crosses/TableTools.js","components/Crosses/CrossesList.js","components/Crosses/TableContainer.js","components/Crosses/InsertCrossModal.js","components/Crosses/ManageCrossModal.js","containers/Crosses.js"],"names":["SearchBar","className","type","autoComplete","name","id","this","props","placeholder","onKeyUp","onEnter","onChange","value","children","Component","TableTools","onClick","turnPage","disabled","currentPage","updateNumOfItems","CrossesList","displayModal","cross","setActiveCross","itemsPerPage","crosses","isLogged","slice","map","CROSS_ID","key","COMPETITOR_PART","GENERIC","COMPETITOR","BRAND","direct","comments","TableContainer","length","InsertCrossModal","state","competitors","manufacturers","selectedCompetitor","competitorPart","selectedPrincipal","principalPart","addNewCompetitor","newCompetitor","fetchCompetitors","comps","fetch","then","res","json","setState","competitor_id","body","competitor","toUpperCase","headers","method","JSON","stringify","catch","error","alert","response","console","log","toggleAddCompetitorButton","isAddingNewComp","obj","recordChange","e","target","validateForm","classList","add","remove","insertCross","comp_id","comp_model","brnd_id","brnd_model","success","updateTable","hide","mfgs","brand_id","Modal","dialogClassName","show","onHide","centered","ModalHeader","closeButton","ModalTitle","ModalBody","style","transition","htmlFor","maxWidth","element","competitor_name","float","width","aria-hidden","onBlur","aria-describedby","brand_name","rows","React","ManageCrossModal","crossId","componentDidMount","a","mfgsRes","compsRes","updateCross","Number","deleteCross","prevProps","prevState","brand","find","defaultValue","window","confirm","Crosses","input","activeCross","updateInput","loadCrosses","changeNumOfItemsPerPage","parseInt","url","document","title","dir","Math","ceil","showInsertCrossModal","hideInsertCrossModal","showManageCrossModal","hideManageCrossModal","displayManageCrossModal","displayInsertCrossModal"],"mappings":"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","file":"static/js/3.0a9df03d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"../styles/searchbar.css\"\nclass SearchBar extends Component {\n    render() {\n        return (\n            <div className=\"col-md-8 col-10 searchbar\">\n                <input type=\"text\" className=\"form-control\" autoComplete=\"off\" name=\"name\" id={this.props.id}\n                    placeholder={this.props.placeholder} onKeyUp={(this.props.onEnter)?this.props.onEnter: ()=>{}} onChange={this.props.onKeyUp} value={this.props.value?this.props.value: \"\"}/>\n                {this.props.children}\n            </div>\n        );\n\n    }\n}\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport \"../../styles/tableTools.css\"\nclass TableTools extends Component {\n    render() {\n        return (\n            <div id=\"tableTools\">\n                <div id=\"pageContainer\">\n                    <div className=\"leftTriangle\" id=\"previousPage\" onClick={()=>{this.props.turnPage(-1)}}></div>\n                    <input type=\"text\" name=\"page\" className=\"form-control disable-selection\" id=\"pageNumber\" disabled value={this.props.currentPage} />\n                    <div className=\"rightTriangle\" id=\"nextPage\" onClick={()=>{this.props.turnPage(1)}}></div>\n                </div>\n\n                <select className=\"form-control\" id=\"itemsPerPage\" onChange={this.props.updateNumOfItems}>\n                    <option>10</option>\n                    <option>25</option>\n                    <option>50</option>\n                </select>\n\n            </div>\n        );\n\n    }\n}\n\nexport default TableTools;","import React, { Component } from 'react';\n\nclass CrossesList extends Component {\n\n    displayModal = (cross) =>{\n        this.props.setActiveCross(cross);\n        this.props.displayModal();\n    }\n    render() {\n        const { currentPage, itemsPerPage, crosses } = this.props;\n\n        return (\n            <tbody id=\"tableBody\" className={(this.props.isLogged)?\"selectable\":\"\"}>\n                {\n                    crosses.slice(itemsPerPage * (currentPage - 1), itemsPerPage * (currentPage)).map(cross => {\n                        return (\n                            <tr id={cross.CROSS_ID} key={cross.COMPETITOR_PART+\",\"+cross.GENERIC} onClick={()=>{if(this.props.isLogged)this.displayModal(cross)}}>\n                                <td>{cross.COMPETITOR}</td>\n                                <td>{cross.COMPETITOR_PART}</td>\n                                <td>{cross.BRAND}</td>\n                                <td>{cross.GENERIC}</td>\n                                <td>{cross.direct}</td>\n                                <td>{cross.comments}</td>\n                            </tr>\n                        );\n                    })\n            }\n            </tbody>\n        );\n\n    }\n}\n\nexport default CrossesList;","\nimport React, { Component } from 'react';\nimport CrossesList from './CrossesList';\nimport \"../../styles/crosses.css\"\nclass TableContainer extends Component {\n    render() {\n        return (this.props.crosses.length)? (\n            <div id=\"tableContainer\">\n                <table id=\"tableCrosses\">\n                    <thead>\n                        <tr className=\"firstRow\">\n                            <th>Competitor</th>\n                            <th>Part Number</th>\n                            <th>A&R MFG</th>\n                            <th>A&R MPN</th>\n                            <th>Direct</th>\n                            <th>Comments</th>\n                        </tr>\n                    </thead>\n\n\n                    <CrossesList\n                        currentPage={this.props.currentPage}\n                        itemsPerPage={this.props.itemsPerPage}\n                        crosses={this.props.crosses}\n                        displayModal={this.props.displayModal} \n                        setActiveCross={this.props.setActiveCross}\n                        isLogged = {this.props.isLogged}\n                        />\n\n                </table>\n\n            </div>\n        ): <h2 className=\"centered\">No records found...</h2>;\n\n    }\n}\n\nexport default TableContainer;","import React from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\n// import \"../styles/employeeModal.css\"\n\n\nclass InsertCrossModal extends React.Component {\n    state = {\n        competitors: [],\n        manufacturers: [],\n        selectedCompetitor: \"\",\n        competitorPart: \"\",\n        selectedPrincipal: \"\",\n        principalPart: \"\",\n        direct: \"YES\",\n        comments: \"\",\n        addNewCompetitor: false,\n        newCompetitor: \"\"\n    }\n\n    componentDidMount() {\n        let mfgs;\n\n        // https://arizoslocal.herokuapp.com/includes/getPrincipals.php\n        fetch(\"https://arback-node.herokuapp.com/principals\")\n            .then(res => res.json())\n            .then(res => {\n                mfgs = res;\n                this.setState({ manufacturers: mfgs, selectedPrincipal: mfgs[0].brand_id });\n            });\n\n        this.fetchCompetitors();\n\n    }\n\n    fetchCompetitors = () => {\n        let comps;\n\n        // https://arizoslocal.herokuapp.com/includes/getCompetitors.php\n        fetch(\"https://arback-node.herokuapp.com/competitors\")\n            .then(res => res.json())\n            .then(res => {\n                comps = res;\n                this.setState({ competitors: comps, selectedCompetitor: comps[0].competitor_id });\n            });\n    }\n\n    addNewCompetitor = () => {\n        let body = {};\n        body.competitor = this.state.newCompetitor.toUpperCase();\n\n        fetch(\"https://arback-node.herokuapp.com/competitors\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify(body)\n\n        })\n            .then(res => res.json())\n            .catch(error => alert(\"something went wrong. :(\"))\n            .then(response => {\n                console.log(response);\n                this.toggleAddCompetitorButton();\n                this.fetchCompetitors();\n            });\n    }\n\n    \n\n    toggleAddCompetitorButton = () => {\n        const isAddingNewComp = this.state.addNewCompetitor;\n\n        let obj = {};\n        obj.addNewCompetitor = !isAddingNewComp;\n\n        if (isAddingNewComp) obj.newCompetitor = \"\";\n        this.setState(obj);\n    }\n\n    recordChange = (e) => {\n        let obj = {};\n        obj[e.target.id] = e.target.value;\n        this.setState(obj);\n\n        if (e.target.id === \"competitorPart\" || e.target.id === \"principalPart\") {\n            this.validateForm(e);\n        }\n    }\n\n    validateForm = (e) => {\n        if (e.target.value === \"\") {\n            e.target.classList.add(\"redBorder\");\n        } else {\n            e.target.classList.remove(\"redBorder\");\n        }\n    }\n\n    insertCross = (e) => {\n        if (this.state.competitorPart === \"\" || this.state.selectedCompetitor === \"\" || this.state.direct === \"\" ||\n            this.state.selectedPrincipal === \"\" || this.state.principalPart === \"\") {\n            alert(\"Error. Something went Wrong\");\n            return;\n        }\n\n        const { selectedCompetitor, competitorPart, selectedPrincipal, principalPart, direct, comments } = this.state;\n\n        let body = {\n            comp_id: selectedCompetitor,\n            comp_model: competitorPart,\n            brnd_id: selectedPrincipal,\n            brnd_model: principalPart,\n            direct: direct,\n            comments: comments\n        }\n\n        console.log(JSON.stringify(body));\n        // let body = new FormData();\n\n        fetch(\"https://arback-node.herokuapp.com/crosses\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify(body)\n\n        })\n            .then(res => res.json())\n            .catch(error => alert(\"something went wrong. :(\"))\n            .then(response => {\n                if (response.success) {\n                    alert(response.success);\n                    this.props.updateTable();\n                } else if (response.error) {\n                    alert(response.error);\n                }\n\n                this.props.hide();\n            });\n    }\n\n    render() {\n\n        return (\n            <Modal\n                dialogClassName='custom-dialog'\n                show={this.props.show}\n                onHide={this.props.hide}\n                id=\"insertCrossModal\"\n                centered>\n\n                <ModalHeader closeButton>\n                    <ModalTitle>Insert Cross</ModalTitle>\n                </ModalHeader>\n\n                <ModalBody style={{ transition: 'all 0.5s ease-out' }}>\n                    <div className=\"form-group\">\n\n                        <div className='row form-group'>\n\n                            <div className='col-12'>\n                                <label htmlFor=\"compSelect\">Competitor:</label>\n                                <select name=\"competitor\" className=\"custom-select col-10\" style={{ maxWidth: \"88%\" }} id=\"selectedCompetitor\" onChange={this.recordChange}>\n                                    {this.state.competitors.map(\n                                        element => <option key={element.competitor_id} value={element.competitor_id}>{element.competitor_name}</option>\n                                    )}\n                                </select>\n\n                                <button className='form-control' style={{ float: \"right\", width: \"10%\" }} onClick={this.toggleAddCompetitorButton}>\n                                    {this.state.addNewCompetitor ? <i className=\"fa fa-minus red\" aria-hidden=\"true\"></i> : <i className=\"fa fa-plus green\" aria-hidden=\"true\"></i>}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {\n                        this.state.addNewCompetitor ?\n                            (<div className='row form-group'>\n                                <div className='col-12'>\n                                    <input type=\"text\" name=\"compName\" id=\"newCompetitor\" className=\"form-control form-group\"\n                                        onChange={this.recordChange} onBlur={this.validateForm}\n                                        style={{ float: \"left\", width: \"78%\" }}\n                                        placeholder=\"New Competitor's name\" aria-describedby=\"newCompetitor\" />\n\n                                    {this.state.newCompetitor ? (<button className=\"btn btn-success form-group\" id=\"addComp\"\n                                        style={{ width: \"20%\", float: \"right\" }}\n                                        onClick={this.addNewCompetitor}>\n                                        Add\n                                    </button>) :\n                                        (<button className=\"btn btn-success form-group\" disabled\n                                            style={{ width: \"20%\", float: \"right\" }}>\n                                            Add\n                                    </button>)}\n\n                                </div>\n                            </div>) : \"\"\n                    }\n\n                    <div className=\"row form-group\">\n                        <div className=\"col-12\">\n                            <input type=\"text\" name=\"nombreR\" id=\"competitorPart\" className=\"form-control\"\n                                onKeyUp={this.recordChange} onBlur={this.validateForm}\n                                placeholder=\"Competitor's Part Number...\" aria-describedby=\"competitorPartNumber\" />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"compSelect\">A&R Manufacturer:</label>\n                        <select\n                            onChange={this.recordChange}\n                            name=\"principal\" className=\"custom-select\" id=\"selectedPrincipal\">\n                            {this.state.manufacturers.map(\n                                element => <option key={element.brand_id} value={element.brand_id}>{element.brand_name}</option>\n                            )}\n                        </select>\n                    </div>\n\n                    <div className=\"row form-group\">\n                        <div className=\"col-12\">\n                            <input type=\"text\" name=\"nombreR\" id=\"principalPart\" className=\"form-control\"\n                                placeholder=\"AR Manufacturer's Part Number...\" aria-describedby=\"helpId\"\n                                onKeyUp={this.recordChange} onBlur={this.validateForm} />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"directCross\">Direct:</label>\n                        <select name=\"direct\" className=\"custom-select\" onChange={this.recordChange} id=\"direct\">\n                            <option value=\"YES\">Yes</option>\n                            <option value=\"NO\">No</option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"comments\">Comments</label>\n                        <textarea className=\"form-control\" onKeyUp={this.recordChange} id=\"comments\" rows=\"2\"></textarea>\n                    </div>\n\n                    {(this.state.competitorPart !== \"\" && this.state.principalPart !== \"\") ? <button className=\"btn btn-AR col-3\"\n                        id=\"sendReg\" onClick={this.insertCross}>Send</button> : <button disabled className=\"btn btn-AR col-3\"\n                            id=\"sendReg\">Send</button>}\n\n                </ModalBody>\n            </Modal >\n        );\n    }\n\n\n}\n\nexport default InsertCrossModal;","import React from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\n// import \"../styles/employeeModal.css\"\n\n\nclass ManageCrossModal extends React.Component {\n    state = {\n        competitors: [],\n        manufacturers: [],\n        selectedCompetitor: \"\",\n        crossId: 0,\n        competitorPart: \"\",\n        selectedPrincipal: \"\",\n        principalPart: \"\",\n        direct: \"YES\",\n        comments: \"\",\n    }\n\n    componentDidMount= async () => {\n        let mfgsRes = await fetch(\"https://arback-node.herokuapp.com/principals\");\n        let mfgs = await mfgsRes.json();\n\n        let compsRes = await fetch(\"https://arback-node.herokuapp.com/competitors\");\n        let comps = await compsRes.json();\n\n        this.setState({\n            competitors: comps,\n            manufacturers: mfgs,\n        })\n\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps !== this.props){\n            const { CROSS_ID, BRAND, COMPETITOR, COMPETITOR_PART, GENERIC, comments, direct } = this.props.cross;\n\n            let brand = this.state.manufacturers.find(element => element.brand_name === BRAND);\n            let competitor = this.state.competitors.find(element => element.competitor_name === COMPETITOR)\n    \n            this.setState({\n                crossId: CROSS_ID, \n                selectedCompetitor: (competitor)?competitor.competitor_id: \"\", \n                competitorPart: COMPETITOR_PART, \n                selectedPrincipal: (brand)?brand.brand_id:\"\", \n                principalPart: GENERIC,\n                direct: direct,\n                comments: comments\n            })\n        }\n    }\n\n    recordChange = (e) => {\n        let obj = {};\n        obj[e.target.id] = e.target.value;\n        this.setState(obj);\n\n        if (e.target.id === \"competitorPart\" || e.target.id === \"principalPart\") {\n            this.validateForm(e);\n        }\n    }\n\n    validateForm = (e) => {\n        if (e.target.value === \"\") {\n            e.target.classList.add(\"redBorder\");\n        } else {\n            e.target.classList.remove(\"redBorder\");\n        }\n    }\n\n    updateCross = (id) => {\n        const {crossId, selectedPrincipal, principalPart, direct, comments} = this.state;\n\n        let body = {\n            selectedPrincipal: Number(selectedPrincipal),\n            principalPart: principalPart,\n            direct: direct,\n            comments: comments\n        }\n\n        fetch(`https://arback-node.herokuapp.com/crosses/${crossId}`, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'PUT',\n            body: JSON.stringify(body)\n        })\n        .then(res=>res.json())\n        .then(response => {\n            alert(response)\n            this.props.hide();\n            this.props.updateTable();\n        })\n        .catch(error => alert(error));\n        \n\n    }\n\n    deleteCross = (id) => {\n        fetch(`https://arback-node.herokuapp.com/crosses/${id}`, {\n            method: \"DELETE\" //,\n            // body: body\n        })\n            .then(res => res.json())\n            .then(response => {\n                if (response) {\n                    alert(\"Cross Deleted Successfully\");\n                    this.props.hide();\n                    this.props.updateTable();\n                }\n            })\n            .catch(error => alert(error));\n    }\n\n\n    render() {\n        const { CROSS_ID, BRAND, COMPETITOR, COMPETITOR_PART, direct } = this.props.cross;\n\n        let brand = this.state.manufacturers.find(element => element.brand_name === BRAND);\n        let competitor = this.state.competitors.find(element => element.competitor_name === COMPETITOR)\n\n        return (\n            <Modal\n                dialogClassName='custom-dialog'\n                show={this.props.show}\n                onHide={this.props.hide}\n                id=\"manageCrossModal\"\n                centered>\n\n                <ModalHeader closeButton>\n                    <ModalTitle>Manage Cross No. {CROSS_ID}  </ModalTitle>\n                </ModalHeader>\n\n                <ModalBody style={{ transition: 'all 0.5s ease-out' }}>\n                    <div className=\"form-group\">\n\n                        <div className='row form-group'>\n\n                            <div className='col-12'>\n                                <label htmlFor=\"compSelect\">Competitor:</label>\n                                <select name=\"competitor\" className=\"custom-select col-12\"\n                                    disabled defaultValue={(competitor) ? competitor.competitor_id : \"9\"}\n                                    id=\"selectedCompetitor\">\n                                    {this.state.competitors.map(\n                                        element => <option key={element.competitor_id}\n                                            value={element.competitor_id}>{element.competitor_name}</option>\n                                    )}\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className=\"row form-group\">\n                        <div className=\"col-12\">\n                            <input type=\"text\" name=\"nombreR\" id=\"competitorPart\" className=\"form-control\"\n                                disabled placeholder=\"Competitor's Part Number...\" \n                                value={COMPETITOR_PART} aria-describedby=\"competitorPartNumber\" />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"compSelect\">A&R Manufacturer:</label>\n                        <select\n                            defaultValue={(brand) ? brand.brand_id : \"8\"} onChange={this.recordChange}\n                            name=\"principal\" className=\"custom-select\" id=\"selectedPrincipal\">\n                            {this.state.manufacturers.map(\n                                element => <option key={element.brand_id} value={element.brand_id}>{element.brand_name}</option>\n                            )}\n                        </select>\n                    </div>\n\n                    <div className=\"row form-group\">\n                        <div className=\"col-12\">\n                            <input type=\"text\" name=\"nombreR\" id=\"principalPart\" className=\"form-control\"\n                                placeholder=\"AR Manufacturer's Part Number...\" aria-describedby=\"helpId\"\n                                onChange={this.recordChange} value={this.state.principalPart} onBlur={this.validateForm} />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"directCross\">Direct:</label>\n                        <select name=\"direct\" className=\"custom-select\" defaultValue={direct} onChange={this.recordChange} id=\"direct\">\n                            <option value=\"YES\">Yes</option>\n                            <option value=\"NO\">No</option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"comments\">Comments</label>\n                        <textarea className=\"form-control\" onChange={this.recordChange} value={(this.state.comments)?this.state.comments:\"\"} id=\"comments\" rows=\"2\"></textarea>\n                    </div>\n\n                    {(this.state.competitorPart !== \"\" && this.state.principalPart !== \"\") ? <button className=\"btn btn-success col-3\"\n                        id=\"UpdateCrossBtn\" onClick={() => { this.updateCross(CROSS_ID)}}>Update</button> : <button disabled className=\"btn btn-success col-3\"\n                            id=\"UpdateCrossBtn\">Update</button>}\n                    <button style={{ float: \"right\" }} className=\"btn btn-danger col-3\" onClick={() => { if (window.confirm(\"Do you really want to delete this cross?\")) this.deleteCross(CROSS_ID) }}\n                        id=\"deleteCrossBtn\">Delete</button>\n                </ModalBody>\n            </Modal >\n        );\n    }\n\n\n}\n\nexport default ManageCrossModal;","import React, { Component } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport TableTools from '../components/Crosses/TableTools';\nimport TableContainer from '../components/Crosses/TableContainer';\nimport InsertCrossModal from '../components/Crosses/InsertCrossModal'\nimport ManageCrossModal from '../components/Crosses/ManageCrossModal'\n\nclass Crosses extends Component {\n    state = {\n        crosses: [],\n        input: \"\",\n        itemsPerPage: 10,\n        currentPage: 1,\n        activeCross: {\n            CROSS_ID: \"\",\n            BRAND: 8, \n            COMPETITOR: 9, \n            COMPETITOR_PART: \"\", \n            GENERIC: \"\", \n            comments: \"\", \n            direct: \"NO\"}\n    }\n\n    componentDidMount() {\n        this.loadCrosses();\n        document.title = \"A&R Crosses\"\n    }\n\n    updateInput = (e) => {\n        this.setState({ input: e.target.value });\n    }\n\n    onEnter = (e) =>{\n        if (e.key === 'Enter') {\n            this.loadCrosses(e.target);\n            return;\n        }\n    }\n\n    setActiveCross = (cross) =>{\n        this.setState({activeCross: cross});\n    }\n\n\n    changeNumOfItemsPerPage = (e) => {\n        // console.log(e.target.value);\n        this.setState({ itemsPerPage: parseInt(e.target.value), currentPage: 1 })\n    }\n\n    turnPage(dir) {\n        const { currentPage, crosses, itemsPerPage } = this.state;\n\n        if (currentPage + dir > Math.ceil(crosses.length / itemsPerPage)\n            || currentPage + dir < 1) return;\n\n\n        this.setState({ currentPage: currentPage + dir });\n\n    }\n\n\n    loadCrosses = () => {\n        //https://arizoslocal.herokuapp.com/includes/crosses.php\n        let url = \"https://arback-node.herokuapp.com/crosses\";\n        url += (this.state.input !== \"\") ? \"?input=\" + this.state.input : \"\";\n        fetch(url, {\n            method: 'GET',\n        })\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ crosses: res, input: \"\", currentPage: 1 });\n                // console.log(res);\n            });\n    }\n\n    render() {\n\n        return (\n            <div className=\"crossesComponent\">\n\n                <InsertCrossModal show={this.props.showInsertCrossModal} updateTable={this.loadCrosses} hide={this.props.hideInsertCrossModal} />\n\n                <ManageCrossModal show={this.props.showManageCrossModal}  updateTable={this.loadCrosses} hide={this.props.hideManageCrossModal} cross={this.state.activeCross}/>\n\n                <SearchBar placeholder=\"Search Competitor's Part...\"\n                    id=\"searchCrossInput\"\n                    onKeyUp={this.updateInput}\n                    onEnter = {this.onEnter}\n                    value={this.state.input}>\n                    <button type=\"button\" className=\"btn\" onClick={this.loadCrosses} id=\"searchButton\">Search</button>\n                    <button type=\"button\" className=\"btn\" onClick={() => { this.setState({ input: \"\" }); this.loadCrosses() }} id=\"fullSearchButton\">Full List</button>\n                </SearchBar>\n\n                <TableTools\n                    updateNumOfItems={this.changeNumOfItemsPerPage}\n                    turnPage={(dir) => { this.turnPage(dir) }}\n                    currentPage={this.state.currentPage} />\n\n                <TableContainer currentPage={this.state.currentPage}\n                    itemsPerPage={this.state.itemsPerPage}\n                    crosses={this.state.crosses} \n                    displayModal={this.props.displayManageCrossModal}\n                    setActiveCross={this.setActiveCross}\n                    isLogged = {this.props.isLogged}\n                />\n\n\n                {(this.props.isLogged) ? <button className=\"btn btn-AR\"  onClick={this.props.displayInsertCrossModal} id=\"insertCrossBtn\">Add Cross</button> : (null)}\n\n            </div>\n\n        );\n\n    }\n}\n\nexport default Crosses;"],"sourceRoot":""}